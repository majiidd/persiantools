name: ci

on: [push]

jobs:
  tests:
    name: ${{matrix.os}} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', 'pypy-3.9', 'pypy-3.10', 'pypy-3.11']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pipenv'

      - name: Install pipenv
        run: python -m pip install pipenv

      - name: Install dependencies
        shell: bash
        env:
          PIPENV_NOSPIN: "1"
          PIPENV_VENV_IN_PROJECT: "1"
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            export PIPENV_PYTHON="${pythonLocation}\\python.exe"
          else
            export PIPENV_PYTHON="${pythonLocation}/bin/python"
          fi

          pipenv install --dev

      - name: Display Python version
        env:
          PIPENV_VENV_IN_PROJECT: "1"
        run: pipenv run python -V

      - name: Run tests
        env:
          PIPENV_NOSPIN: "1"
          PIPENV_VENV_IN_PROJECT: "1"
        run: pipenv run pytest -ra --cov=persiantools --cov-report xml:coverage.xml tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Flake8
        run: pip install flake8
      - name: Run Flake8
        run: flake8 .

  build-and-publish:
    if: github.repository == 'majiidd/persiantools' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install pypa/build
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build setuptools
        python -m build --sdist --wheel --outdir dist/ .

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        verbose: true

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
